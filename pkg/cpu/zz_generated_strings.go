// Code generated by "stringer -type=InterruptType,InterruptMasterChange -output=zz_generated_strings.go"; DO NOT EDIT.

package cpu

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VBLANK-1]
	_ = x[LCD_STAT-2]
	_ = x[TIMER-4]
	_ = x[SERIAL-8]
	_ = x[JOYPAD-16]
}

const (
	_InterruptType_name_0 = "VBLANKLCD_STAT"
	_InterruptType_name_1 = "TIMER"
	_InterruptType_name_2 = "SERIAL"
	_InterruptType_name_3 = "JOYPAD"
)

var (
	_InterruptType_index_0 = [...]uint8{0, 6, 14}
)

func (i InterruptType) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _InterruptType_name_0[_InterruptType_index_0[i]:_InterruptType_index_0[i+1]]
	case i == 4:
		return _InterruptType_name_1
	case i == 8:
		return _InterruptType_name_2
	case i == 16:
		return _InterruptType_name_3
	default:
		return "InterruptType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MASTER_SET_NONE-0]
	_ = x[MASTER_SET_NOW-1]
	_ = x[MASTER_SET_NEXT-2]
}

const _InterruptMasterChange_name = "MASTER_SET_NONEMASTER_SET_NOWMASTER_SET_NEXT"

var _InterruptMasterChange_index = [...]uint8{0, 15, 29, 44}

func (i InterruptMasterChange) String() string {
	if i >= InterruptMasterChange(len(_InterruptMasterChange_index)-1) {
		return "InterruptMasterChange(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InterruptMasterChange_name[_InterruptMasterChange_index[i]:_InterruptMasterChange_index[i+1]]
}
